class DatingApp {
    constructor() {
        this.config = {
            colors: ['#FF6B6B', '#4ECDC4', '#4A64BF', '#FDCB6E', '#A05195', '#2ECC71', '#E74C3C', '#3498DB', '#9B59B6', '#1ABC9C', '#F1C40F', '#E67E22'],
            maxInterests: 5,
            minAge: 18,
            maxAge: 100,
            maxPhotos: 6,
            interests: [
                { id: 'music', name: '–ú—É–∑—ã–∫–∞', emoji: 'üéµ' },
                { id: 'sports', name: '–°–ø–æ—Ä—Ç', emoji: '‚öΩ' },
                { id: 'books', name: '–ö–Ω–∏–≥–∏', emoji: 'üìö' },
                { id: 'travel', name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', emoji: '‚úàÔ∏è' },
                { id: 'art', name: '–ò—Å–∫—É—Å—Å—Ç–≤–æ', emoji: 'üé®' },
                { id: 'games', name: '–ò–≥—Ä—ã', emoji: 'üéÆ' },
                { id: 'cooking', name: '–ö—É–ª–∏–Ω–∞—Ä–∏—è', emoji: 'üç≥' },
                { id: 'photography', name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', emoji: 'üì∑' },
                { id: 'movies', name: '–ö–∏–Ω–æ', emoji: 'üé¨' },
                { id: 'nature', name: '–ü—Ä–∏—Ä–æ–¥–∞', emoji: 'üå≥' },
                { id: 'technology', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', emoji: 'üíª' },
                { id: 'fashion', name: '–ú–æ–¥–∞', emoji: 'üëó' }
            ],
            zodiacSigns: [
                { id: 'aries', name: '–û–≤–µ–Ω ‚ôà', dates: '21.03 - 19.04' },
                { id: 'taurus', name: '–¢–µ–ª–µ—Ü ‚ôâ', dates: '20.04 - 20.05' },
                { id: 'gemini', name: '–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôä', dates: '21.05 - 20.06' },
                { id: 'cancer', name: '–†–∞–∫ ‚ôã', dates: '21.06 - 22.07' },
                { id: 'leo', name: '–õ–µ–≤ ‚ôå', dates: '23.07 - 22.08' },
                { id: 'virgo', name: '–î–µ–≤–∞ ‚ôç', dates: '23.08 - 22.09' },
                { id: 'libra', name: '–í–µ—Å—ã ‚ôé', dates: '23.09 - 22.10' },
                { id: 'scorpio', name: '–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôè', dates: '23.10 - 21.11' },
                { id: 'sagittarius', name: '–°—Ç—Ä–µ–ª–µ—Ü ‚ôê', dates: '22.11 - 21.12' },
                { id: 'capricorn', name: '–ö–æ–∑–µ—Ä–æ–≥ ‚ôë', dates: '22.12 - 19.01' },
                { id: 'aquarius', name: '–í–æ–¥–æ–ª–µ–π ‚ôí', dates: '20.01 - 18.02' },
                { id: 'pisces', name: '–†—ã–±—ã ‚ôì', dates: '19.02 - 20.03' }
            ],
            lookingForOptions: [
                { id: 'friendship', name: '–î—Ä—É–∂–±–∞', emoji: 'ü§ù' },
                { id: 'dating', name: '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', emoji: 'üíë' },
                { id: 'serious', name: '–°–µ—Ä—å—ë–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', emoji: 'üíç' },
                { id: 'networking', name: '–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥', emoji: 'üëî' },
                { id: 'travel', name: '–°–ø—É—Ç–Ω–∏–∫ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', emoji: '‚úàÔ∏è' }
            ],
            preferenceOptions: [
                { id: 'male', name: '–ú—É–∂—á–∏–Ω', emoji: 'üë®' },
                { id: 'female', name: '–ñ–µ–Ω—â–∏–Ω', emoji: 'üë©' },
                { id: 'both', name: '–í—Å–µ—Ö', emoji: 'üöª' }
            ]
        };

        this.state = {
            currentScreen: 'main', // –≠—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 'registration' –∏–ª–∏ 'profile' –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage
            currentStep: 1,
            totalSteps: 11, // –£–≤–µ–ª–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤: 9 (—Å—Ç–∞—Ä—ã—Ö) + 2 (–Ω–æ–≤—ã—Ö) = 11
            userData: {
                name: '',
                gender: '',
                age: '',
                zodiacSign: '',
                city: '',
                description: '',
                interests: [],
                lookingFor: [],
                preference: 'both',
                profileColor: '#FF6B6B',
                avatar: null,
                photos: [],
                location: { lat: null, lng: null }
            },
            suggestedProfiles: [],
            likedProfiles: [],
            passedProfiles: []
        };

        this.initElements();
        this.formHandler = new FormHandler(this);
        this.profileHandler = new ProfileHandler(this);
        this.uiHandler = new UIHandler(this);
        this.matchHandler = new MatchHandler(this); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ MatchHandler

        this.bindEvents();
        this.checkSavedProfile(); // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
        this.showLoadingScreen();
    }

    showLoadingScreen() {
        this.uiHandler.initLogoAnimation();

        // –ê–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ –ª–æ–≥–æ—Ç–∏–ø–∞
        const loadingTextElements = document.querySelectorAll('.loading-text');
        loadingTextElements.forEach(el => {
            el.style.opacity = '0'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–∏ —Å–∫—Ä—ã—Ç—ã –ø–µ—Ä–µ–¥ –∞–Ω–∏–º–∞—Ü–∏–µ–π
            el.style.transform = 'translateY(20px) scale(0.95)'; // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è fadeInScale
        });

        setTimeout(() => {
            loadingTextElements.forEach(el => {
                el.style.animationPlayState = 'running'; // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞
            });
        }, 1500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ—è–≤–ª–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ (–ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞)

        setTimeout(() => {
            const loadingScreen = document.getElementById('loadingScreen');
            const appContainer = document.getElementById('appContainer');

            loadingScreen.style.opacity = '0';

            loadingScreen.addEventListener('transitionend', () => {
                loadingScreen.style.display = 'none';
                appContainer.style.display = 'flex';
                this.switchScreen(this.state.currentScreen); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
            }, { once: true });
        }, 3500); // –û–±—â–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (–ª–æ–≥–æ + —Ç–µ–∫—Å—Ç)
    }

    initElements() {
        this.elements = {
            registrationForm: document.getElementById('registrationForm'),
            profileView: document.getElementById('profileView'),
            matchScreen: document.getElementById('matchScreen'), // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ matchScreen
            settingsScreen: document.getElementById('settingsScreen'),
            topNavigation: document.getElementById('topNavigation'),
            navButtons: document.querySelectorAll('.nav-btn'),
            locationModal: document.getElementById('locationModal'), // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modalAllowLocationBtn: document.getElementById('modalAllowLocationBtn'),
            modalSkipLocationBtn: document.getElementById('modalSkipLocationBtn')
        };
    }

    bindEvents() {
        this.elements.navButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                const screenName = e.currentTarget.dataset.screen;
                this.switchScreen(screenName);
            });
        });

        const backToProfileFromMatchBtn = document.getElementById('backToProfileFromMatchBtn'); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ backToProfileFromMatchBtn
        if (backToProfileFromMatchBtn) {
            backToProfileFromMatchBtn.addEventListener('click', () => this.switchScreen('profile'));
        }

        const clearDataBtn = document.getElementById('clearDataBtn');
        if (clearDataBtn) {
            clearDataBtn.addEventListener('click', () => {
                if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.')) {
                    this.clearAllData();
                }
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        if (this.elements.modalAllowLocationBtn) {
            this.elements.modalAllowLocationBtn.addEventListener('click', () => this.handleLocationPermission(true));
        }
        if (this.elements.modalSkipLocationBtn) {
            this.elements.modalSkipLocationBtn.addEventListener('click', () => this.handleLocationPermission(false));
        }
    }

    checkSavedProfile() {
        const savedProfile = localStorage.getItem('datingProfile');
        if (savedProfile) {
            try {
                this.state.userData = JSON.parse(savedProfile);
                // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º–∞—Å—Å–∏–≤—ã –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                if (!Array.isArray(this.state.userData.interests)) {
                    this.state.userData.interests = [];
                }
                if (!Array.isArray(this.state.userData.lookingFor)) {
                    this.state.userData.lookingFor = [];
                }
                if (!this.state.userData.preference) {
                    this.state.userData.preference = 'both';
                }
                this.state.currentScreen = 'profile'; // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è:', e);
                localStorage.removeItem('datingProfile'); // –û—á–∏—â–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                this.state.currentScreen = 'registration'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            }
        } else {
            this.state.currentScreen = 'registration'; // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        }
    }

    showProfile() {
        this.profileHandler.showProfile();
    }

    startMatch() { // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ startMatch
        this.matchHandler.startMatch(); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ startMatch
    }

    clearAllData() {
        localStorage.removeItem('datingProfile');
        this.state.userData = {
            name: '',
            gender: '',
            age: '',
            zodiacSign: '',
            city: '',
            description: '',
            interests: [],
            lookingFor: [],
            preference: 'both',
            profileColor: '#FF6B6B',
            avatar: null,
            photos: [],
            location: { lat: null, lng: null }
        };
        alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –æ—á–∏—â–µ–Ω—ã. –í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
        this.switchScreen('registration');
    }

    switchScreen(screenName) {
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã –∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å 'active'
        document.querySelectorAll('.screen').forEach(screen => {
            screen.classList.remove('active');
            screen.style.display = 'none'; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–∏ —Å–∫—Ä—ã—Ç—ã
        });

        // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.elements.navButtons.forEach(button => button.classList.remove('active'));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
        let targetScreenElement;
        if (screenName === 'registration') {
            targetScreenElement = this.elements.registrationForm;
            this.elements.topNavigation.style.display = 'none';
            this.formHandler.renderForm(); // –†–µ–Ω–¥–µ—Ä–∏–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        } else if (screenName === 'profile') {
            targetScreenElement = this.elements.profileView;
            document.querySelector('.nav-btn[data-screen="profile"]').classList.add('active');
            this.elements.topNavigation.style.display = 'flex';
            this.profileHandler.showProfile();
        } else if (screenName === 'match') { // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ match
            targetScreenElement = this.elements.matchScreen; // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ matchScreen
            document.querySelector('.nav-btn[data-screen="match"]').classList.add('active'); // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ match
            this.elements.topNavigation.style.display = 'flex';
            this.matchHandler.startMatch(); // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–±–æ—Ä–∫—É –∞–Ω–∫–µ—Ç // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ startMatch
        } else if (screenName === 'settings') {
            targetScreenElement = this.elements.settingsScreen;
            document.querySelector('.nav-btn[data-screen="settings"]').classList.add('active');
            this.elements.topNavigation.style.display = 'flex';
        }

        if (targetScreenElement) {
            targetScreenElement.style.display = 'flex'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º display: flex –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º active
            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è display: flex –ø–µ—Ä–µ–¥ –∞–Ω–∏–º–∞—Ü–∏–µ–π opacity/height
            setTimeout(() => {
                targetScreenElement.classList.add('active');
            }, 10); 
        }
        
        this.state.currentScreen = screenName;
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–∞–ª—å–Ω—ã–º –æ–∫–Ω–æ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    showLocationModal() {
        this.elements.locationModal.classList.add('active');
    }

    hideLocationModal() {
        this.elements.locationModal.classList.remove('active');
    }

    handleLocationPermission(allow) {
        this.hideLocationModal();
        if (allow) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        this.state.userData.location = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        alert('–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ!');
                        // –ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —Ñ–æ—Ä–º—ã
                        this.formHandler.nextStep(); 
                    },
                    (error) => {
                        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ. –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ.');
                        console.error(error);
                        this.state.userData.location = { lat: null, lng: null }; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
                        this.formHandler.nextStep(); // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                    }
                );
            } else {
                alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º. –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–∂–µ.');
                this.state.userData.location = { lat: null, lng: null }; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º
                this.formHandler.nextStep(); // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
            }
        } else {
            this.state.userData.location = { lat: null, lng: null }; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º
            alert('–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω.');
            this.formHandler.nextStep(); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        }
    }

    calculateDistance(lat1, lon1, lat2, lon2) {
        if (!lat1 || !lon1 || !lat2 || !lon2) return null;
        
        const R = 6371; // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –∫–º
        const dLat = this.deg2rad(lat2-lat1);
        const dLon = this.deg2rad(lon2-lon1);
        const a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        return Math.round(R * c);
    }

    deg2rad(deg) {
        return deg * (Math.PI/180);
    }
}

document.addEventListener('DOMContentLoaded', () => {
    new DatingApp();
});
